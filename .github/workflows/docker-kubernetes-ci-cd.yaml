name: kubernetes-helm-ci-cd
on:
  # push:
  workflow_dispatch:

env:
  AWS_REGION : "ap-southeast-1"

permissions:
  id-token: write
  contents: read


jobs:
  # build-and-push-images:
  #   runs-on: ubuntu-latest
  #   env:
  #     BASE_URL: ${{ vars.BASE_URL }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
      
  #     - name: Set up QEMU
  #       uses: docker/setup-qemu-action@v3
      
  #     - name: Set up Docker Buildx
  #       uses: docker/setup-buildx-action@v3
      
  #     - name: Docker meta
  #       id: meta
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: |
  #           ${{ secrets.DOCKERHUB_USERNAME }}/front-end
  #         tags: |
  #           type=sha,prefix=,suffix=
      
  #     - name: Login to Docker Hub
  #       uses: docker/login-action@v3
  #       with:
  #         username: ${{ secrets.DOCKERHUB_USERNAME }}
  #         password: ${{ secrets.DOCKERHUB_TOKEN }}
      
  #     - name: Build and push front-end application
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: web
  #         push: true
  #         tags: ${{ steps.meta.outputs.tags }}
  #         target: prod-static
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max

  #     - name: Docker meta
  #       id: meta-back-end
  #       uses: docker/metadata-action@v5
  #       with:
  #         images: |
  #           ${{ secrets.DOCKERHUB_USERNAME }}/back-end
  #         tags: |
  #           type=sha,prefix=,suffix=

  #     - name: Build and push back-end application
  #       uses: docker/build-push-action@v6
  #       with:
  #         context: api
  #         push: true
  #         tags: ${{ steps.meta-back-end.outputs.tags }}
  #         cache-from: type=gha
  #         cache-to: type=gha,mode=max
  # build-and-push-helm-charts:
  #   runs-on: ubuntu-latest
  #   needs: build-and-push-images
  #   env:
  #     PATCH_VERSION: ${{ github.run_id }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Package and push front-end helm chart
  #       run: |
  #         app_version=$(git rev-parse --short HEAD)
  #         chart_version=0.1.$PATCH_VERSION
  #         echo ${{ secrets.DOCKERHUB_TOKEN }} | helm registry login registry-1.docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
  #         helm package charts/front-end --app-version $app_version --version $chart_version
  #         helm push front-end-$chart_version.tgz oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}
  #     - name: Package and push back-end helm chart
  #       run: |
  #         app_version=$(git rev-parse --short HEAD)
  #         chart_version=0.1.$PATCH_VERSION
  #         echo ${{ secrets.DOCKERHUB_TOKEN }} | helm registry login registry-1.docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
  #         helm package charts/back-end --app-version $app_version --version $chart_version
  #         helm push back-end-$chart_version.tgz oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}
  #     - name: Package and push mysql helm chart
  #       run: |
  #         app_version=$(git rev-parse --short HEAD)
  #         chart_version=0.1.$PATCH_VERSION
  #         echo ${{ secrets.DOCKERHUB_TOKEN }} | helm registry login registry-1.docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
  #         helm package charts/mysql --app-version $app_version --version $chart_version
  #         helm push db-$chart_version.tgz oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }} 
  
  deploy-to-kubernetes:
    runs-on: ubuntu-latest
    steps:
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          audience: sts.amazonaws.com
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_IAM_ROLE }}

      - name: Setup kubectl
        uses: azure/setup-kubectl@v4
        with:
          version: latest
      
      - name: Add kubeconfig for EKS cluster
        run: |
          aws eks update-kubeconfig --name ci-cd-k8s --alias ci-cd-k8s --region ${{ env.AWS_REGION }}
      
      - name: Deploy front-end services to EKS
        run: |
          helm upgrade --install front-end oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/front-end --namespace front-end \
          --create-namespace --set config.BASE_URL=${{ vars.BASE_URL }}
      
      - name: Deploy back-end services to EKS
        run: |
          helm upgrade --install back-end oci://registry-1.docker.io/${{ secrets.DOCKERHUB_USERNAME }}/back-end --namespace back-end \
          --create-namespace --set config.DB_HOST=${{ vars.DB_HOST }} \
          --set config.DB_PASS=${{ secrets.DB_PASS }}
